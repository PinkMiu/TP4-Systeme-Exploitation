import sys
class Prompt:

    def __init__(self, client, invite_pattern = ">>"):
        self.invite_pattern = invite_pattern
        self.client = client
        self.startPrompt()

    def invite(self, message):
        answer = input(message)
        return answer

    def processCommand(self, input):
       temp = input.split(" ")
       command = temp[0]
       return command

    def getParameter(self, input):
        temp = input.split(" ")
        parameter = temp[1]
        return parameter

    def startPrompt(self):
        while True:
            answer = self.invite(self.invite_pattern)

            command = self.processCommand(answer)

            if (command == 'connecter?'):
                clientAnswer = self.client.bonjour()
                if (clientAnswer == 'bonjourClient'):
                    toPrint = 'Oui'
                else:
                    toPrint = 'Une erreur est survenue'
                    sys.exit(1)

            elif (command == 'nomServeur?'):
                toPrint = self.client.serverName()

            elif (command == 'listeDossier?'):
                parameter = self.getParameter(answer)
                clientAnswer = self.client.folderList(parameter)

                if (clientAnswer == 'erreurDossierInexistant'):
                    toPrint = 'Dossier inexistant'

                elif (clientAnswer == 'erreurDossierLecture'):
                    toPrint = 'Une erreur est survenue, le dossier est en lecture actuellement.'

                elif (clientAnswer == ""):
                    toPrint = "Le dossier n'a aucun sous-dossier."

                else:
                    toPrint = clientAnswer

            elif (command == 'dossier?'):
                parameter = self.getParameter(answer)
                clientAnswer = self.client.folderExist(parameter)

                if (clientAnswer == True):
                    toPrint = 'Oui'
                else:
                    toPrint = 'Non'

            elif (command == 'creerDossier?'):
                parameter = self.getParameter(answer)
                clientAnswer = self.client.createFolder(parameter)

                if (clientAnswer == 'ok'):
                    toPrint = 'ok'

                elif (clientAnswer == 'erreurDossierExiste'):
                    toPrint = 'Dossier existe.'

                elif (clientAnswer == 'erreurDossierInexistant'):
                    toPrint = "Certain dossiers dans cette commande sont inexistant. Cr√©er ces dossiers d'abord."

            elif (command == 'televerser?'):
                parameter = self.getParameter(answer)
                toPrint = self.client.upload(parameter)

            elif (command == 'telecharger?'):
                parameter = self.getParameter(answer)
                toPrint = self.client.update(parameter)

            elif (command == 'supprimerDossier?'):
                parameter = self.getParameter(answer)
                clientAnswer = self.client.deleteFolder(parameter)

                if (clientAnswer == 'ok'):
                    toPrint = 'ok'
                elif (clientAnswer == 'erreurDossierInexistant'):
                    toPrint = 'Dossier inexistant'
                else:
                    toPrint = 'Une erreur est survenue, le dossier est en lecture actuellement.'

            elif (command == 'listeFichier?'):
                parameter = self.getParameter(answer)
                clientAnswer = self.client.fileList(parameter)

                if (clientAnswer == 'erreurDossierInexistant'):
                    toPrint = 'Le dossier est inexistant ou ne contient aucun fichier.'

                elif (clientAnswer == 'erreurDossierLecture'):
                    toPrint = 'Une erreur est survenue, le dossier est en lecture actuellement.'

                else:
                    toPrint = clientAnswer

            elif (command == 'fichier?'):
                parameter = self.getParameter(answer)
                clientAnswer = self.client.fileExist(parameter)

                if (clientAnswer == True):
                    toPrint = 'Oui'
                else:
                    toPrint = 'Non'

            elif (command == 'supprimerFichier?'):
                parameter = self.getParameter(answer)
                clientAnswer= self.client.deleteFile(parameter)

            elif (command == 'fichierIdentique?'):
                parameter = self.getParameter(answer)
                toPrint = self.client.identicalFile(parameter)

            elif (command == 'identiqueFichier?'):
                parameter = self.getParameter(answer)
                toPrint = self.client.identicalFile(parameter)

            elif (command == 'fichierRecent?'):
                parameter = self.getParameter(answer)
                toPrint = self.client.fichierRecent(parameter)

            elif (command == 'recentFichier?'):
                parameter = self.getParameter(answer)
                toPrint = self.client.recentFile(parameter)

            elif (command == 'miseAjour?'):
                parameter = self.getParameter(answer)
                toPrint = self.client.update(parameter)

            elif (command == 'quitter'):
                clientAnswer = self.client.quit()
                if (clientAnswer == "bye"):
                    toPrint = "bye"
                    sys.exit(1)
                    
            print(toPrint)
