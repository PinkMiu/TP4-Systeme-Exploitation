class Client:  ## S,occupe de la syncro (On peux avoir une méthode syncronisation)
    """
    Classe représentant le client
    """

    def __init__(self, connexion, protocole):
        self.connexion = connexion
        self.protocole = protocole
        self.connexion.connect()

    def askServer(self, balise, text=''):
        toSend = self.protocole.generate(balise, text)
        self.connexion.send(toSend)
        data = self.connexion.receive()
        filteredData = self.protocole.interpreter(data)
        return filteredData


    def bonjour(self):
        answer = self.askServer("bonjourServeur")
        return answer

    def nomServeur(self):
        answer = self.askServer("questionNomServeur")
        return answer

    def listeDossiers(self, dossier):
        answer = self.askServer("questionListeDossier", dossier)
        filteredAnswer = self.interpreter(answer)
        #return..

    def dossierExist(self, dossier):
        toSend = self.protocole.generate("questionNomServeur")
        self.connexion.send(toSend)
        answer = self.connexion.receive()
        return answer

    def creerDossier(self):
        toSend = self.protocole.generate("creerDossier")
        self.connexion.send(toSend)
        answer = self.connexion.receive()
        return answer

    def televerser(self,dossier):
        toSend = self.protocole.generate("televerserFichier")
        self.connexion.send(toSend)
        answer = self.connexion.receive()
        return answer

    def telecharger(self):
        toSend = self.protocole.generate("telechargerFichier")
        self.connexion.send(toSend)
        answer = self.connexion.receive()
        return answer

    def supprimerDossier(self,dossier):
        toSend = self.protocole.generate("supprimerDossier")
        self.connexion.send(toSend)
        answer = self.connexion.receive()
        return answer

    def listeFichiers(self, fichier):
        toSend = self.protocole.generate("questionListeFichier")
        self.connexion.send(toSend)
        answer = self.connexion.receive()
        return answer

    def fichierExist(self, fichier):
        pass

    def supprimerFichier(self, fichier):
        toSend = self.protocole.generate("supprimerFichier")
        self.connexion.send(toSend)
        answer = self.connexion.receive()
        return answer

    def fichierIdentique(self):
        toSend = self.protocole.generate("questionFichierIdentique")
        self.connexion.send(toSend)
        answer = self.connexion.receive()
        return answer

    def fichierRecent(self):
        toSend = self.protocole.generate("questionFichierRecent")
        self.connexion.send(toSend)
        answer = self.connexion.receive()
        return answer

    def miseAJour(self):
        pass
