import unittest
import unittest.mock
from Client import Client
from Protocole_xml import Protocole_xml
from Prompt import Prompt


class ClientTests(unittest.TestCase):
    def testClientAskServer_IfConnected_ReturnsBonjourClient(self):
        protocole = Protocole_xml()
        mock_connexion = unittest.mock.Mock()
        returnValue = protocole.generate("bonjourClient")
        mock_connexion.receive.return_value = returnValue
        client = Client(mock_connexion, protocole)


        clientAnswer = client.bonjour()
        expected_answer = 'bonjourClient'
        self.assertEquals(clientAnswer, expected_answer)

    def testClientAskServer_serverName_ReturnsServerName(self):
        protocole = Protocole_xml()
        mock_connexion = unittest.mock.Mock()
        returnValue = protocole.generate("questionNomServeur")
        mock_connexion.receive.return_value = returnValue
        client = Client(mock_connexion, protocole)


        clientAnswer = client.serverName()
        expected_answer = 'TP4 Dropbox 2.0'
        self.assertEquals(clientAnswer, expected_answer)


if __name__ == '__main__':
    unittest.main()
